(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{175:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},function(){var e=this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"redux是啥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux是啥","aria-hidden":"true"}},[e._v("#")]),e._v(" Redux是啥")]),e._v(" "),r("p",[e._v("Redux 是 JavaScript 状态容器，提供可预测化的状态管理。")]),e._v(" "),r("p",[e._v("Redux 除了和 React 一起用外，还支持其它界面库。")]),e._v(" "),r("h2",{attrs:{id:"react为啥要用redux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react为啥要用redux","aria-hidden":"true"}},[e._v("#")]),e._v(" React为啥要用Redux")]),e._v(" "),r("ul",[r("li",[e._v("React只是一个视图层的框架，如果要开发大型应用，就需要一个专门处理数据层的工具。")]),e._v(" "),r("li",[e._v("在TodoList的demo中，我们只是用了父组件往子组件传递了一层数据，如果项目变大，有很多层的子组件，数据的传递就变得十分冗杂。")]),e._v(" "),r("li",[e._v("Redux可以将数据管理抽离出来统一管理。")])]),e._v(" "),r("h2",{attrs:{id:"redux-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux-flow","aria-hidden":"true"}},[e._v("#")]),e._v(" Redux Flow")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=779109256,4038797986&fm=26&gp=0.jpg",alt:"ReduxFlow"}})]),e._v(" "),r("ul",[r("li",[e._v("React Component：借书的用户（页面组件）")]),e._v(" "),r("li",[e._v("Store：图书管理员（存储数据的地方）")]),e._v(" "),r("li",[e._v("Action Creators：借书时申请的内容（组件需求数据的请求）")]),e._v(" "),r("li",[e._v("Reducers：图书的借还记录本（数据的状态）")])]),e._v(" "),r("h2",{attrs:{id:"redux的特别点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redux的特别点","aria-hidden":"true"}},[e._v("#")]),e._v(" Redux的特别点")]),e._v(" "),r("ul",[r("li",[e._v("store是唯一的")]),e._v(" "),r("li",[e._v("只有store自己才能修改自己，因此reducer只是拿到数据，返回新数据给store，store自己把新数据替换。")]),e._v(" "),r("li",[e._v("Reducer必须是纯函数：给定固定的输入就有固定的输出，而且不会有任何的副作用。")])])])}],!1,null,null,null);t.default=s.exports}}]);